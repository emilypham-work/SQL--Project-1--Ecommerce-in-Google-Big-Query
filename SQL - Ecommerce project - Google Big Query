# Data set: bigquery-public-data.google_analytics_sample.ga_sessions_20170801
Link instruction: https://docs.google.com/spreadsheets/d/1WnBJsZXj_4FDi2DyfLH1jkWtfTridO2icWbWCh7PLs8/edit#gid=0

-- Query 01: calculate total visit, pageview, transaction and revenue for Jan, Feb and March 2017 order by month

SELECT 
    format_date ("%Y%m",Parse_date ("%Y%m%d", date)) as month,    
    SUM(totals.visits) AS visits,                                   
    SUM(totals.pageviews) AS pageviews,
    SUM(totals.transactions) AS transactions,
    SUM(totals.transactionRevenue)/1000000 AS revenue
FROM `bigquery-public-data.google_analytics_sample.ga_sessions_*` 
WHERE _TABLE_SUFFIX BETWEEN '20170101' AND '20170331'  
GROUP BY month
ORDER BY month


-- Query 02: Bounce rate per traffic source in July 2017

SELECT
    trafficSource.source as source,
    sum(totals.visits) as total_visits,
    sum(totals.Bounces) as total_no_of_bounces,
    (sum(totals.Bounces)/sum(totals.visits))* 100 as bounce_rate
FROM `bigquery-public-data.google_analytics_sample.ga_sessions_201707*`
GROUP BY source
ORDER BY total_visits DESC

-- Query 3: Revenue by traffic source by week, by month in June 2017

SELECT
    'WEEK'as time_type,
    FORMAT_DATE("%Y%W",PARSE_DATE('%Y%m%d',date)) as time,
    trafficSource.source as source,
    SUM(totals.totalTransactionRevenue) as revenue
FROM `bigquery-public-data.google_analytics_sample.ga_sessions_*`
Where _table_suffix between '20170601' and '20170630'
GROUP BY time, source 

UNION ALL

SELECT
    'MONTH'as time_type,
    FORMAT_DATE("%Y%m",PARSE_DATE('%Y%m%d',date)) as time,
    trafficSource.source as source,
    SUM(totals.totalTransactionRevenue) as revenue
FROM `bigquery-public-data.google_analytics_sample.ga_sessions_*`
Where _table_suffix between '20170601' and '20170630'
GROUP BY time, source  
ORDER BY 4 DESC


-- Query 04: Average number of product pageviews by purchaser type (purchasers vs non-purchasers) in June, July 2017. Note: totals.transactions >=1 for purchaser and totals.transactions is null for non-purchaser

with non_purchase as
    (SELECT   
        month,
        ( SUM(total_pagesviews_per_user) / COUNT(users) ) AS avg_pageviews_per_user
    FROM (
            SELECT distinct format_date ("%Y%m",Parse_date ("%Y%m%d", date)) as month, 
                    fullVisitorId AS users,
                    SUM(totals.pageviews) AS total_pagesviews_per_user
            FROM`bigquery-public-data.google_analytics_sample.ga_sessions_*`
            where _table_suffix between '20170601' and '20170731'
            AND totals.transactions IS NULL
            GROUP BY month, users ) 
    GROUP BY month),

purchase as
    (SELECT 
             month,
            ( SUM(total_pagesviews_per_user) / COUNT(users) ) AS avg_pageviews_per_user
     FROM (
            SELECT distinct format_date ("%Y%m",Parse_date ("%Y%m%d", date)) as month,
                    fullVisitorId AS users,
                    SUM(totals.pageviews) AS total_pagesviews_per_user
            FROM`bigquery-public-data.google_analytics_sample.ga_sessions_*`
            where _table_suffix between '20170601' and '20170731'
            AND totals.transactions >=1
            GROUP BY month, users ) 
    GROUP BY month) 

Select non_purchase.month
     , non_purchase.avg_pageviews_per_user
     , purchase.avg_pageviews_per_user 
FROM non_purchase
FULL JOIN purchase
ON non_purchase.month=purchase.month


-- Query 05: Average number of transactions per user that made a purchase in July 2017

SELECT
       FORMAT_DATE("%Y%m",PARSE_DATE('%Y%m%d',date)) as month,
       sum(totals.transactions)/count(distinct fullVisitorId)
FROM `bigquery-public-data.google_analytics_sample.ga_sessions_*`
Where _table_suffix between '20170701' and '20170731'
    AND totals.transactions >= 1
GROUP BY month

-- Query 06: Average amount of money spent per session

SELECT
    FORMAT_DATE("%Y%m",PARSE_DATE('%Y%m%d',date)) as month,
    sum(totals.totalTransactionRevenue)/count(totals.visits) as avg_revenue_by_user_per_visit
FROM`bigquery-public-data.google_analytics_sample.ga_sessions_*`
Where _table_suffix between '20170701' and '20170731'
    AND totals.transactions >= 1
GROUP BY month

-- Query 07: Other products purchased by customers who purchased product "YouTube Men's Vintage Henley" in July 2017. Output should show product name and the quantity was ordered.
#standardSQL

with buyer_list as(
    SELECT
        distinct fullVisitorId
    FROM `bigquery-public-data.google_analytics_sample.ga_sessions_201707*`
    , UNNEST(hits) AS hits
    , UNNEST(hits.product) as product
    WHERE product.v2ProductName = "YouTube Men's Vintage Henley"
    AND totals.transactions>=1
    AND product.productRevenue is not null
)

SELECT
  product.v2ProductName AS other_purchased_products,
  SUM(product.productQuantity) AS quantity
FROM `bigquery-public-data.google_analytics_sample.ga_sessions_201707*`
, UNNEST(hits) AS hits
, UNNEST(hits.product) as product
JOIN buyer_list using(fullVisitorId)
WHERE product.v2ProductName != "YouTube Men's Vintage Henley"
 and product.productRevenue is not null
GROUP BY other_purchased_products
ORDER BY quantity DESC;

--Query 08: Calculate cohort map from pageview to addtocart to purchase in last 3 month. For example, 100% pageview then 40% add_to_cart and 10% purchase.

SELECT
    format_date('%Y%m', parse_date('%Y%m%d',date)) as month,
    count(CASE WHEN eCommerceAction.action_type = '2' THEN product.v2ProductName END) as num_product_view,
    count(CASE WHEN eCommerceAction.action_type = '3' THEN product.v2ProductName END) as num_add_to_cart,
    count(CASE WHEN eCommerceAction.action_type = '6' THEN product.v2ProductName END) as num_purchase
FROM `bigquery-public-data.google_analytics_sample.ga_sessions_*`
,UNNEST(hits) as hits
,UNNEST (hits.product) as product
where _table_suffix between '20170101' and '20170331'
and eCommerceAction.action_type in ('2','3','6')
group by month
order by month
)

select
    *,
    round(num_add_to_cart/num_product_view * 100, 2) as add_to_cart_rate,
    round(num_purchase/num_product_view * 100, 2) as purchase_rate
from product_data